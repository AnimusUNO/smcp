[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "smcp"
version = "3.0.0"
description = "Animus Letta MCP Package - A modular orchestration server for Letta Agentic AI framework"
readme = "README.md"
license = {text = "AGPLv3"}
authors = [
    {name = "Mark Rizzn Hopkins", email = "mark@animus.uno"}
]
maintainers = [
    {name = "Mark Rizzn Hopkins", email = "mark@animus.uno"}
]
keywords = ["mcp", "letta", "ai", "agentic", "orchestration", "animus"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "aiohttp>=3.8.0",
    "aiohttp-cors>=0.7.0",
    "python-dotenv==1.0.0",
    "pydantic>=2.7.2,<3.0.0",
    "httpx>=0.27.0",
    "mcp>=1.10.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock==3.12.0",
    "pytest-timeout>=2.1.0",
    "aiohttp-test-utils==0.1.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock==3.12.0",
    "pytest-timeout>=2.1.0",
    "aiohttp-test-utils==0.1.0",
]

[project.urls]
Homepage = "https://animus.uno"
Documentation = "https://github.com/AnimusUNO/smcp"
Repository = "https://github.com/AnimusUNO/smcp"
Issues = "https://github.com/AnimusUNO/smcp/issues"
Changelog = "https://github.com/AnimusUNO/smcp/blob/master/CHANGELOG.md"

[project.scripts]
smcp-server = "smcp:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["smcp*"]

[tool.setuptools.package-data]
smcp = ["plugins/**/*.py"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]
asyncio_mode = "auto"
timeout = 60

[tool.coverage.run]
source = ["smcp.py", "smcp"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
